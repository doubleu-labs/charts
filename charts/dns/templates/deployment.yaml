---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dns.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "dns.labels" . | nindent 4 }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
  {{- if .Values.deployment.annotations }}
  annotations: {{ toYaml .Values.deployment.annotations | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.deployment.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.deployment.rollingUpdate.maxSurge }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/name: {{ template "dns.name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/name: {{ template "dns.name" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ template "dns.serviceAccountName" }}
      {{- if .Values.deployment.affinity }}
      affinity:
      {{- toYaml .Values.deployment.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.deployment.topologySpreadConstraints }}
      topologySpreadConstraints:
      {{- tpl (toYaml .Values.deployment.topologySpreadConstraints) $ | nindent 6 }}
      {{- end }}
      {{- if .Values.deployment.tolerations }}
      tolerations:
      {{- toYaml .Values.deployment.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.deployment.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if not (empty .Values.image.pullSecrets) }}
      imagePullSecrets:
      {{- toYaml .Values.image.pullSecrets | nindent 6 }}
      {{- end }}
      containers:
      - name: "coredns"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
        - -conf
        - /etc/coredns/Corefile
        resources: {{ toYaml .Values.deployment.resources | nindent 10 }}
        ports: {{ include "dns.containerPorts" . }}
        {{- if .Values.deployment.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.deployment.livenessProbe.failureThreshold }}
          successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
        {{- end }}
        {{- if .Values.deployment.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.deployment.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
        {{- end }}
        {{- if .Values.deployment.securityContext }}
        securityContext:
        {{- toYaml .Values.deployment.securityContext | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: config-volume
          mountPath: /etc/coredns
        {{- if .Values.zoneFiles }}
        - name: config-zones
          mountPath: /etc/coredns/zones
        {{- end }}
        {{- range .Values.extraSecrets }}
        - name: {{ .name }}
          mountPath: {{ .mountPath }}
          readOnly: true
        {{- end }}
        {{- if .Values.extraVolumeMounts -}}
        {{ toYaml .Values.extraVolumeMounts | nindent 8 }}
        {{- end }}
        {{- if .Values.certificate.certManager.enabled }}
        - name: cert-manager-certificate
          mountPath: /etc/coredns/tls
          readOnly: true
        {{- end }}
      volumes:
      - name: config-volume
        configMap:
          name: {{ template "dns.fullname" . }}
          items:
          - key: Corefile
            path: Corefile
      {{- if .Values.zoneFiles }}
      - name: config-zones
        configMap:
          name: {{ template "dns.fullname" . }}-zones
          items:
          {{- range .Values.zoneFiles }}
          - key: {{ .filename }}
            path: {{ .filename }}
          {{- end }}
      {{- end }}
      {{- range .Values.extraSecrets }}
      - name: {{ .name }}
        secret:
          secretName: {{ .name }}
          defaultMode: {{ default 400 .defaultMode }}
      {{- end }}
      {{- if .Values.extraVolumes -}}
      {{ toYaml .Values.extraVolumes | nindent 6 }}
      {{- end }}
      {{- if .Values.certificate.certManager.enabled }}
      - name: cert-manager-certificate
        secret:
          secretName: {{ .Release.Name }}-tls-certificate
      {{- end }}